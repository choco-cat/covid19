[{"N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\index.js":"1","N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\components\\root\\index.js":"2","N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\api\\covid.js":"3","N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\api\\flags.js":"4","N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\constants\\filters.js":"5","N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\constants\\missed.js":"6","N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\services\\calculations.js":"7","N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\components\\summary\\index.js":"8","N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\components\\countryList\\index.js":"9","N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\components\\worldMap\\index.js":"10","N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\components\\graph\\index.js":"11","N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\services\\cache.js":"12","N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\components\\summary\\table.js":"13","N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\services\\sorting.js":"14","N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\services\\selectFilters.js":"15","N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\components\\filters\\index.js":"16","N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\components\\worldMap\\map\\index.js":"17","N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\components\\graph\\chart\\index.js":"18","N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\components\\summary\\tdItem.js":"19","N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\components\\worldMap\\map\\legend.js":"20","N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\components\\worldMap\\map\\tooltip.js":"21"},{"size":246,"mtime":1607582936294,"results":"22","hashOfConfig":"23"},{"size":4575,"mtime":1608548175577,"results":"24","hashOfConfig":"23"},{"size":3926,"mtime":1608548175530,"results":"25","hashOfConfig":"23"},{"size":1028,"mtime":1608463201751,"results":"26","hashOfConfig":"23"},{"size":305,"mtime":1608202428394,"results":"27","hashOfConfig":"23"},{"size":1800,"mtime":1608117143859,"results":"28","hashOfConfig":"23"},{"size":4770,"mtime":1608485798558,"results":"29","hashOfConfig":"23"},{"size":8074,"mtime":1608548175581,"results":"30","hashOfConfig":"23"},{"size":9777,"mtime":1608548175546,"results":"31","hashOfConfig":"23"},{"size":364,"mtime":1608548175588,"results":"32","hashOfConfig":"23"},{"size":2296,"mtime":1608548175574,"results":"33","hashOfConfig":"23"},{"size":253,"mtime":1608463201775,"results":"34","hashOfConfig":"23"},{"size":1030,"mtime":1608548534301,"results":"35","hashOfConfig":"23"},{"size":230,"mtime":1608117143863,"results":"36","hashOfConfig":"23"},{"size":2649,"mtime":1608455229073,"results":"37","hashOfConfig":"23"},{"size":3043,"mtime":1608548175558,"results":"38","hashOfConfig":"23"},{"size":5798,"mtime":1608548175599,"results":"39","hashOfConfig":"23"},{"size":2425,"mtime":1608548175561,"results":"40","hashOfConfig":"23"},{"size":104,"mtime":1608548175586,"results":"41","hashOfConfig":"23"},{"size":2748,"mtime":1608548175621,"results":"42","hashOfConfig":"23"},{"size":963,"mtime":1608485798554,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"q1ji1j",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\index.js",[],["88","89"],"N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\components\\root\\index.js",[],"N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\api\\covid.js",[],"N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\api\\flags.js",[],"N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\constants\\filters.js",[],"N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\constants\\missed.js",[],"N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\services\\calculations.js",["90","91","92"],"import { endOfToday } from \"date-fns\";\r\nimport { format } from 'date-fns';\r\nimport {filters} from \"../constants/filters\";\r\n\r\nconst populationWorld = 7 * 10 ** 9;\r\n\r\n/*\r\nВозвращает статистику всех статусов по стране по всем датам на 100 тыс. населения, массив объектов вида\r\n{\r\nCountry: \"China\",\r\nCountryCode: \"\",\r\nCityCode: \"\",\r\nLat: \"0\",\r\nLon: \"0\",\r\nConfirmed: 0.08,\r\nDeaths: 0.056,\r\nRecovered: 0.023,\r\nDate: \"2020-12-10T00:00:00Z\"\r\n}\r\ncountry_slug = название страны, все маленькие буквы\r\n*/\r\n\r\nexport const calc100Men = (data, population) => {\r\n  return data.map((el) => ({\r\n    TotalConfirmed: Math.round(el.TotalConfirmed / (population / 10 ** 5) * 100) / 100,\r\n    TotalDeaths: Math.round(el.TotalDeaths / (population / 10 ** 5) * 100) / 100,\r\n    TotalRecovered: Math.round(el.TotalRecovered / (population / 10 ** 5) * 100) / 100,\r\n    NewConfirmed: Math.round(el.NewConfirmed / (population / 10 ** 5) * 100) / 100,\r\n    NewDeaths: Math.round(el.NewDeaths / (population / 10 ** 5) * 100) / 100,\r\n    NewRecovered: Math.round(el.NewRecovered / (population / 10 ** 5) * 100) / 100,\r\n    Date: el.Date,\r\n  }));\r\n};\r\n\r\n\r\n/*Итоговые данные по миру, объект вида\r\n {\r\n  NewConfirmed: 623213, //Последний день\r\n  TotalConfirmed: 71694121,\r\n  NewDeaths: 10224, //Последний день\r\n  TotalDeaths: 1604878,\r\n  NewRecovered: 1506921, //Последний день\r\n  TotalRecovered: 46848398\r\n} */\r\n/*\r\n  filters: status = 'TotalConfirmed', relative = 'Absolute', period = 'lastDay'\r\n*/\r\n\r\nexport const getDataWorldLastDay = (data, filters) => {\r\n  if (!data) {\r\n    return;\r\n  }\r\n\r\n  const currentDate = endOfToday();\r\n  let result = [...data];\r\n\r\n  if (filters.relative === 'To100men') {\r\n    result = calc100Men(result, populationWorld);\r\n  }\r\n\r\n   result = result.map((el) => {\r\n    return { Date: currentDate, Data: el[filters.status] };\r\n  });\r\n\r\n  return result;\r\n};\r\n\r\n//Данные для мира и по выбранной стране по дням\r\nexport const getData = (data, filters, population = populationWorld) => {\r\n  if (!data) {\r\n    return;\r\n  }\r\n\r\n  let result = [...data];\r\n  let filtersStatus = filters.status;\r\n  let currentDate = false;\r\n\r\n  //Данные за последний  день\r\n  if(result.length === 1) {\r\n    currentDate = endOfToday();\r\n    filtersStatus = filters.status.replace('Total', 'New');\r\n  }\r\n  if (filters.relative === 'To100men') {\r\n    result = calc100Men(result, population);\r\n  }\r\n\r\n  result = result.map((el) => {\r\n    //Костыль, что-то не так со статистикой в API у Китая в один день\r\n    if(filters.geography === 'China' && el.TotalConfirmed > 6000000) {\r\n      el.TotalConfirmed = 90100;\r\n    }\r\n    return { Date: currentDate ? format(new Date(currentDate), 'dd-MMM-yyyy') : format(new Date(el.Date),'dd-MMM-yyyy'), ...el};\r\n  });\r\n\r\n  return result;\r\n};\r\n\r\nexport const getDataCountries = (data, globalFilters) => {\r\n  if (!data) {\r\n    return;\r\n  }\r\n\r\n  let result = [...data];\r\n  let filtersStatus = globalFilters.status;\r\n  let currentDate;\r\n  //Данные за последний день, передать сюда константу filters\r\n  if(globalFilters.period === filters.period.lastDay) {\r\n    currentDate = endOfToday();\r\n    filtersStatus = globalFilters.status.replace('Total', 'New');\r\n  }\r\n  result = result.map((el) => {\r\n    return { Data: el[filtersStatus], ...el };\r\n  });\r\n\r\n  if (globalFilters.relative === 'To100men') {\r\n    result = result.map((el) => {\r\n      return {\r\n    ...el,\r\n     Data: Math.round( el.Data / (el.population / 10 ** 5) * 100) / 100\r\n     }});\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport const getColorsFromFilters = (status) => {\r\n  let color;\r\n  switch (status) {\r\n    case filters.status.recovered:\r\n      color = `39,150,3`;\r\n      break;\r\n    case filters.status.deaths:\r\n      color =  `0,23,144`;\r\n      break;\r\n    default:\r\n      color =  `245,0,0`;\r\n      break;\r\n  }\r\n  return color;\r\n};\r\n\r\nexport const getFilterName = (value) => {\r\n  let result;\r\n  switch (value) {\r\n    case filters.status.recovered:\r\n      result = 'Recovered';\r\n      break;\r\n    case filters.status.deaths:\r\n      result =  'Deaths';\r\n      break;\r\n    case filters.status.confirmed:\r\n      result =  'Confirmed';\r\n      break;\r\n    case filters.period.all:\r\n      result = 'All Time';\r\n      break;\r\n    case filters.period.lastDay:\r\n      result =  'Last Day';\r\n      break;\r\n    case filters.relative.absolute:\r\n      result =  'Absolute';\r\n      break;\r\n    case filters.relative.to100men:\r\n      result =  'Per 100k';\r\n      break;\r\n  }\r\n  return result;\r\n};","N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\components\\summary\\index.js",["93","94"],"N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\components\\countryList\\index.js",[],"N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\components\\worldMap\\index.js",[],"N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\components\\graph\\index.js",[],"N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\services\\cache.js",[],"N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\components\\summary\\table.js",[],"N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\services\\sorting.js",[],"N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\services\\selectFilters.js",[],"N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\components\\filters\\index.js",[],"N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\components\\worldMap\\map\\index.js",[],"N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\components\\graph\\chart\\index.js",[],"N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\components\\summary\\tdItem.js",[],"N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\components\\worldMap\\map\\legend.js",[],"N:\\RSSchool\\choco-cat-JS2020Q3\\covid19\\src\\components\\worldMap\\map\\tooltip.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":81,"column":5,"nodeType":"101","messageId":"102","endLine":81,"endColumn":18},{"ruleId":"99","severity":1,"message":"103","line":108,"column":5,"nodeType":"101","messageId":"102","endLine":108,"endColumn":16},{"ruleId":"104","severity":1,"message":"105","line":144,"column":3,"nodeType":"106","messageId":"107","endLine":166,"endColumn":4},{"ruleId":"99","severity":1,"message":"108","line":8,"column":8,"nodeType":"101","messageId":"102","endLine":8,"endColumn":15},{"ruleId":"99","severity":1,"message":"109","line":11,"column":7,"nodeType":"101","messageId":"102","endLine":11,"endColumn":14},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'filtersStatus' is assigned a value but never used.","Identifier","unusedVar","'currentDate' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Filters' is defined but never used.","'options' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]